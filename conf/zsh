#!/bin/bash

# Développeur ....: K3rn€l_P4n1K
# Nom ............: zsh
# Description ....: Configuration personnelle de zsh
# Version ........: 1.0
# Date ...........: Fri Jul 29 21:31:48 CEST 2022
# Dépendances ....: zsh
ZSH_DISABLE_COMPFIX=true

DOT_PATH="${HOME}/git/github.com/dllejeune/.dotfiles"

alias vim='nvim'
alias v='nvim'
alias n='nano'
# edition des dotfiles
alias rc='${DOT_PATH}/install'
alias sz='source ~/.zshrc'

alias l.va='lynx http://github.com/amix/vimrc -dump'
alias vv='v ${DOT_PATH}/conf/vim'
alias vvrc='cd ~/.vim_runtime/vimrcs; v; cd -'
alias cvrc='cd ~/.vim_runtime/vimrcs'
alias vn='v ${DOT_PATH}/conf/nvim'
alias vz='v ${DOT_PATH}/conf/zsh; sz'
alias vc='v ${DOT_PATH}/install.conf.yaml'
alias c.='cd ${DOT_PATH}'
alias v.='c.; v; cd -'
alias c.va='cat ${DOT_PATH}/install.conf.yaml | egrep "vim-awesome.*install" | sed "s/^\s*-\s\(\S\+\|-\)\s\S\+//" | tr -d " " | egrep -v "^$"'
alias al='cat ${DOT_PATH}/conf/zsh | grep alias | column -t -s = | sort'

alias nz='n ${DOT_PATH}/conf/zsh; sz'
alias cdot='cd ${DOT_PATH}'

function c.va.td(){
    installed=`mktemp`
    wanted=`mktemp`
    vim-awesome search -i | sort | uniq > ${installed}
    c.va | sort | uniq > ${wanted}
    comm -3 ${installed} ${wanted}
}
alias c.va.DEL='c.va.td | xargs -n1 vim-awesome uninstall'

# node
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# docker
alias docker.arrete_tous_les_containers='docker container stop $(docker container ls -aq)'
alias docker.supprime_tous_les_containers='docker container rm $(docker container ls -q)'
alias docker.supprime_toutes_les_images='docker image rm $(docker image ls -q)'

alias docker.NETTOIE_TOUT='docker.arrete_tous_les_containers; docker.supprime_tous_les_containers; docker.supprime_toutes_les_images'

docker.status(){ # TODO: faire un script avec bash simple curses 
    echo
    echo "volumes"
    docker volume ls
    echo
    echo "images"
    docker image ls
    echo
    echo "containers"
    docker container ls
}
# sdkman
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"

PATH="$HOME/bin:$PATH"
